<?php

namespace AppBundle\Entity;

/**
 * SubmissionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SubmissionRepository extends \Doctrine\ORM\EntityRepository
{
    function findMySubmissions($promo,$user){
        $query = $this->createQueryBuilder('s')->Where('tm.id = :eleve')->setParameter('eleve',$user);
        $query = $query
            ->select('s')->leftJoin('s.response','r')->addSelect('r')->leftJoin('s.task','t')->addSelect('t')->leftJoin('t.promo','cl')->andWhere('cl.id = :promo')->setParameter('promo',$promo)->leftJoin('s.eleve','tm')->leftJoin('t.responses','g')->addSelect('g')->leftJoin('t.categories','c')->addSelect('c');
        return $query->orderBy('s.createdAt','DESC')->getQuery()->getResult();
    }
    function findMySubmissionsForTask($promo,$user, $task){
        $query = $this->createQueryBuilder('s')->Where('tm.id = :eleve')->setParameter('eleve',$user);
        $query = $query
            ->select('s')->leftJoin('s.response','r')->addSelect('r')->leftJoin('s.task','t')->addSelect('t')->andWhere('t.id = :task')->setParameter('task',$task)->leftJoin('t.promo','cl')->andWhere('cl.id = :promo')->setParameter('promo',$promo)->leftJoin('s.eleve','tm')->leftJoin('t.responses','g')->addSelect('g')->leftJoin('t.categories','c')->addSelect('c');
        return $query->orderBy('s.createdAt','DESC')->getQuery()->getResult();
    }

    function findFlagsSubmissions($promo){
        $query = $this->createQueryBuilder('s')->
        leftJoin('s.task','t')->select('t.name as task')->leftJoin('t.promo','c')
            ->where('c.id = :promoId')
            ->setParameter('promoId',$promo)
            ->addSelect("s.createdAt as date")
            ->andWhere('s.response is not null')
            ->leftJoin('s.eleve','tm')
            ->addSelect('tm.username as eleve')
            ->orderBy('s.createdAt','DESC')
            ->setMaxResults(35)
            ->getQuery()->getResult();
        return $query;
    }

    function findTrafficSubmissions($promo){
        $startDate = time();
        $interval = date('Y-m-d H:i:s', strtotime('-6 day', $startDate));
        $query = $this->createQueryBuilder('s')->

            select('count(s) as nb')
            ->where('s.createdAt >= :interval')->setParameter('interval',$interval)
            ->addSelect('SUBSTRING(s.createdAt,6,5) as date')
            ->leftJoin('s.task','t')
            ->leftJoin('t.promo','c')
            ->andWhere('c.id = :promoId')
            ->setParameter('promoId',$promo)
            ->leftJoin('s.response','r')
            ->addSelect('count(r) as nbr')
            ->groupBy('date')->

            getQuery()->getResult();
        return $query;
    }
}
